group 'org.com'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'

def drivers = ["firefox", "chrome", "ie", "safari"]

repositories {
    mavenCentral()
    jcenter()
}

dependencies {

    def gebVersion = "0.12.2"
    def testngVersion = "6.9.10"
    def seleniumVersion = "2.53.0"

    compile "org.codehaus.groovy:groovy-all:2.3.11"
    compile "junit:junit:4.12"
    compile "log4j:log4j:1.2.17"
    compile "org.gebish:geb-core:$gebVersion"
    compile "org.testng:testng:$testngVersion"
    compile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    compile "org.codehaus.geb:geb-testng:0.7.2"
    compile "org.apache.poi:poi:3.12"
    compile "org.jsoup:jsoup:1.8.3"
    compile "com.relevantcodes:extentreports:2.40.2" /*For Extent Reports*/
    compile "com.google.inject:guice:4.0" /*For TestNG Listeners*/
    compile "com.google.guava:guava:19.0"
    compile "org.apache.httpcomponents:fluent-hc:4.5.2"
    compile "javax.xml.parsers:jaxp-api:1.4.5"
    compile "org.uncommons:reportng:1.1.4"
}

drivers.each { driver ->
    task "${driver}Test"(type: Test, dependsOn: [classes, testClasses]) {
        doFirst {
            delete "reports", "test-output"
            testNGXMLCreator.execute()
        }
        outputs.upToDateWhen { false }
        useTestNG {
            convertPropertiesToSystemProperties()
            systemProperty "geb.env", driver;
            //reports.html.enabled = false;  Enable this when you do not want default JUNIT Reports
            reports.html.destination = System.properties['junit.reports.directory']
            suites 'src/test/resources/testng.xml'
        }
    }
}

task(testNGXMLCreator, dependsOn: ['classes'], type: JavaExec) {
    main = 'Specs.Utilities.TestNGXMLCreator'
    classpath = sourceSets.test.runtimeClasspath
}

/* This Function reads the project.properties file and puts each K,V pair into System Properties.*/

public void convertPropertiesToSystemProperties() {
    String rootDir = new File(".").getCanonicalPath() /*Absolute Path*/
    String projectPropertiesPath = rootDir + "/src/main/resources/project.properties".replace('/', File.separator)
    Properties properties = new Properties()
    properties.load(new FileInputStream(projectPropertiesPath))
    properties.each { key, value ->
        if (System.getProperty(key) == null) {
            System.setProperty(key, value);
        }
    }
}

